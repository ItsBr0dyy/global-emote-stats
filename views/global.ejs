<%- include('navbar') -%>
<head>
	<title>Stats | Global</title>
	<meta name="description" content="Global Emote Stats" />
	<meta property="og:title" content="Stats | Global" />
	<meta property="og:image" content="/static/DankG.png" />
	<meta property="og:description" content="Global Emote Stats" />
</head>
<body>
	<h1 class="title">Global</h1>
	<div class="container-fluid" id="container">
		<div class="row">
			<% if (data.Twitch) { %>
			<div class="top col-md" id="twitch">
				<div class="header">
					<img class="logo" src="/static/twitch.svg" alt="Twitch" draggable="false" />
					<h3>Twitch</h3>
				</div>
				<div class="emotes" id="twitch-emotes" style="padding: 10px">
					<% for (const [i, emote] of data.Twitch.entries()) { %>
					<div class="row twitch" id="emote-twitch-<%= emote.id %>" data-count="<%= emote.usage %>">
						<div class="col-2 flex-center countNumber">
							<p class="count flex-center"><%= i+1 %></p>
						</div>
						<div class="col-5 flex-center">
							<img
								loading="lazy"
								class="emote_image"
								src="<%= emote.link %>"
								title="<%= emote.name %>"
								alt="<%= emote.name %>"
								draggable="false"
								onerror="this.onerror=null;this.src='/static/unavailable.png';" />
						</div>
						<div class="col-5">
							<h3 class="emote_name"><%= emote.name %></h3>
							<p class="emote_usage" id="twitch-<%= emote.id %>"><%= emote.usage.toLocaleString("en-US") %></p>
						</div>
					</div>
					<% } %>
				</div>
			</div>
			<% } %>
			<% if (data.BTTV) { %>
			<div class="top col-md" id="bttv">
				<div class="header">
					<img class="logo" src="/static/bttv.svg" title="BetterTTV" alt="BetterTTV" draggable="false" />
					<h3 class="largeName">BetterTTV</h3>
					<h3 class="shortName">BTTV</h3>
				</div>
				<div class="emotes" id="bttv-emotes" style="padding: 10px">
					<% for (const [i, emote] of data.BTTV.entries()) { %>
					<div class="row bttv" id="emote-bttv-<%= emote.id %>" data-count="<%= emote.usage %>">
						<div class="col-2 flex-center countNumber">
							<p class="count flex-center"><%= i+1 %></p>
						</div>
						<div class="col-5 flex-center">
							<img
								loading="lazy"
								class="emote_image"
								src="<%= emote.link %>"
								title="<%= emote.name %>"
								alt="<%= emote.name %>"
								draggable="false"
								onerror="this.onerror=null;this.src='/static/unavailable.png';" />
						</div>
						<div class="col-5">
							<h3 class="emote_name"><%= emote.name %></h3>
							<p class="emote_usage" id="bttv-<%= emote.id %>"><%= emote.usage.toLocaleString("en-US") %></p>
						</div>
					</div>
					<% } %>
				</div>
			</div>
			<% } %>
			<% if (data.FFZ) { %>
			<div class="top col-md" id="ffz">
				<div class="header">
					<img class="logo" src="/static/ffz.svg" title="FrankerFaceZ" alt="FrankerFaceZ" draggable="false" />
					<h3 class="largeName">FrankerFaceZ</h3>
					<h3 class="shortName">FFZ</h3>
				</div>
				<div class="emotes" id="ffz-emotes" style="padding: 10px">
					<% for (const [i, emote] of data.FFZ.entries()) { %>
					<div class="row ffz" id="emote-ffz-<%= emote.id %>" data-count="<%= emote.usage %>">
						<div class="col-2 flex-center countNumber">
							<p class="count flex-center"><%= i+1 %></p>
						</div>
						<div class="col-5 flex-center">
							<img
								loading="lazy"
								class="emote_image"
								src="<%= emote.link %>"
								title="<%= emote.name %>"
								alt="<%= emote.name %>"
								draggable="false"
								onerror="this.onerror=null;this.src='/static/unavailable.png';" />
						</div>
						<div class="col-5">
							<h3 class="emote_name"><%= emote.name %></h3>
							<p class="emote_usage" id="ffz-<%= emote.id %>"><%= emote.usage.toLocaleString("en-US") %></p>
						</div>
					</div>
					<% } %>
				</div>
			</div>
			<% } %>
			<% if (data.STV) { %>
			<div class="top col-md" id="7tv">
				<div class="header">
					<img class="logo" src="/static/7tv.svg" title="7TV" alt="7TV" draggable="false" />
					<h3>7TV</h3>
				</div>
				<div class="emotes" id="stv-emotes" style="padding: 10px">
					<% for (const [i, emote] of data.STV.entries()) { %>
					<div class="row stv" id="emote-7tv-<%= emote.id %>" data-count="<%= emote.usage %>">
						<div class="col-2 flex-center countNumber">
							<p class="count flex-center"><%= i+1 %></p>
						</div>
						<div class="col-5 flex-center">
							<img
								loading="lazy"
								class="emote_image"
								src="<%= emote.link %>"
								title="<%= emote.name %>"
								alt="<%= emote.name %>"
								draggable="false"
								onerror="this.onerror=null;this.src='/static/unavailable.png';" />
						</div>
						<div class="col-5">
							<h3 class="emote_name"><%= emote.name %></h3>
							<p class="emote_usage" id="7tv-<%= emote.id %>"><%= emote.usage.toLocaleString("en-US") %></p>
						</div>
					</div>
					<% } %>
				</div>
			</div>
			<% } %>
		</div>
	</div>
</body>
<script type="text/javascript" src="/static/index.js"></script>
<script>
	function connectSE_WebSocket() {
		const SE = new WebSocket(`wss://astro.streamelements.com`);
		SE.onopen = () => SE.send('{"type":"subscribe","data":{"topic":"channel.chatstats","room":"global"}}');
		SE.onmessage = (event) => {
			const { type, data } = JSON.parse(event.data);
			switch (type) {
				case 'message': {
					for (const array of data) {
						for (const emote of array) {
							if (emote.type == 'emotes') {
								UpdateEmote(emote, emote.provider);
							}
						}
					}
					break;
				}
			}
		};

		SE.onclose = () => {
			setTimeout(connectSE_WebSocket, 500);
		};
	}

	// function connectMZ_WebSocket() {
	// 	const MZ = new WebSocket(`wss://7tv-ws.markzynk.com`);
	// 	MZ.onmessage = (event) => {
	// 		const { type, data } = JSON.parse(event.data);
	// 		switch (type) {
	// 			case "welcome": {
	// 				MZ.send('{"type":"subscribe","channel":"all"}')
	// 				break;
	// 			}
	// 			case "emote": {
	// 				UpdateEmote(data, '7tv');
	// 				break;
	// 			}
	// 		}
	// 	};
	//
	// 	MZ.onclose = () => {
	// 		setTimeout(connectMZ_WebSocket, 500);
	// 	};
	// }

	connectSE_WebSocket();
	// connectMZ_WebSocket();
</script>
